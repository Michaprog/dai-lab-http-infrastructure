services:
  #################################################################
  # 1) PostgreSQL Database
  #################################################################
  bdr-postgresql:
    image: bitnami/postgresql:17
    container_name: bdr_postgres
    environment:
      POSTGRESQL_USERNAME: bdr
      POSTGRESQL_PASSWORD: bdr
      POSTGRESQL_DATABASE: bdr
    ports:
      - "5432:5432"
    volumes:
      - ./schema_sql/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "bdr"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - garage-network

  #################################################################
  # 2) Traefik Reverse Proxy
  #################################################################
  reverse_proxy:
    image: traefik:v2.9
    container_name: traefik
    command:
      - "--configFile=/etc/traefik/traefik.yaml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yaml:/etc/traefik/traefik.yaml:ro"
      - "./certs:/etc/traefik/certificates:ro"
      - "./auth:/etc/traefik/auth:ro"  # Mount the auth directory
    networks:
      - garage-network

  #################################################################
  # 3) Nginx for Static Files
  #################################################################
  nginx-static:
    build:
      context: ./src/main/resources
      dockerfile: ./Dockerfile
    volumes:
      - ./src/main/resources/static:/usr/share/nginx/html:ro
      - ./src/main/resources/nginx.conf:/etc/nginx/nginx.conf:ro
    expose:
      - "80"
    restart: unless-stopped
    networks:
      - garage-network
    labels:
      - "traefik.enable=true"
      # Route: Host-based routing for the static site with HTTPS
      - "traefik.http.routers.static.rule=Host(`localhost`)"
      - "traefik.http.routers.static.entrypoints=websecure"
      - "traefik.http.routers.static.tls=true"
      # Define the service port
      - "traefik.http.services.static.loadbalancer.server.port=80"

  #################################################################
  # 4) Spring Boot App
  #################################################################
  spring-app:
    build: .
    depends_on:
      bdr-postgresql:
        condition: service_healthy
    expose:
      - "8080"
    networks:
      - garage-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://bdr-postgresql:5432/bdr
      SPRING_DATASOURCE_USERNAME: bdr
      SPRING_DATASOURCE_PASSWORD: bdr
    labels:
      - "traefik.enable=true"
      # Path-based routing for dynamic requests => /api => spring-app with HTTPS
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      # Sticky sessions
      - "traefik.http.services.api.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.api.loadbalancer.sticky.cookie.name=MyStickyCookie"

  #################################################################
  # 5) Portainer (Optional)
  #################################################################
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"  # Access Docker API
      - "portainer_data:/data"                       # Persist data
    networks:
      - garage-network

volumes:
  portainer_data:
  postgres_data:

networks:
  garage-network:
    driver: bridge
    name: garage-network